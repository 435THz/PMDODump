<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Doduo_Intro_001" xml:space="preserve">
    <value>Oh,[pause=20] are you new here?</value>
    <comment></comment>  </data>
  <data name="Doduo_Intro_002" xml:space="preserve">
    <value>I'm Doduo,</value>
    <comment></comment>  </data>
  <data name="Doduo_Intro_003" xml:space="preserve">
    <value>and this is Pachirisu. She and I make up our team, Tactical Retreat.</value>
    <comment></comment>  </data>
  <data name="Doduo_Intro_004" xml:space="preserve">
    <value>Good luck trying to do whatever it is that you're doing,[pause=20] I guess...</value>
    <comment></comment>  </data>
  <data name="Doduo_Line_001" xml:space="preserve">
    <value>In case you couldn't tell,[pause=20] our specialty is running.</value>
    <comment></comment>  </data>
  <data name="Doduo_Line_002" xml:space="preserve">
    <value>For better or for worse.</value>
    <comment></comment>  </data>
  <data name="Doduo_Line_003" xml:space="preserve">
    <value>A lot of teams get stuck in this camp specifically,[pause=30] ourselves included.</value>
    <comment></comment>  </data>
  <data name="Doduo_Line_004" xml:space="preserve">
    <value>Actual combat skill is needed as the dungeons get tougher.</value>
    <comment></comment>  </data>
  <data name="Doduo_Line_005" xml:space="preserve">
    <value>Pachirisu thinks we can get by if we hone our running skills...[pause=30] but...[pause=30] uh...</value>
    <comment></comment>  </data>
  <data name="Doduo_Line_006" xml:space="preserve">
    <value>We've been stuck here for a while...</value>
    <comment></comment>  </data>
  <data name="Pachirisu_Intro_001" xml:space="preserve">
    <value>Hiya![pause=0] Great to see new people around![pause=30] The name's Pachirisu.</value>
    <comment></comment>  </data>
  <data name="Pachirisu_Intro_002" xml:space="preserve">
    <value>Over here is my partner, Doduo. We're Team Tactical Retreat!</value>
    <comment></comment>  </data>
  <data name="Pachirisu_Intro_003" xml:space="preserve">
    <value>Our team name reflects our talents![pause=0] I know it sounds funny,</value>
    <comment></comment>  </data>
  <data name="Pachirisu_Intro_004" xml:space="preserve">
    <value>but learning when to run is important for exploring.</value>
    <comment></comment>  </data>
  <data name="Pachirisu_Line_001" xml:space="preserve">
    <value>Our main skill is being able to outrun our opponents!</value>
    <comment></comment>  </data>
  <data name="Pachirisu_Line_002" xml:space="preserve">
    <value>Doduo and I even got to around ten or so floors into the Guildmaster Trail!</value>
    <comment></comment>  </data>
  <data name="Pachirisu_Line_003" xml:space="preserve">
    <value>A lot of explorers don't manage to get that far in there.</value>
    <comment></comment>  </data>
  <data name="Pachirisu_Line_004" xml:space="preserve">
    <value>I'm sure if we keep working at it,[pause=20] we'll get to the top someday!</value>
    <comment></comment>  </data>
  <data name="Pachirisu_Line_005" xml:space="preserve">
    <value>If you got this far as well,[pause=20] I'm sure you'll be able to beat tougher dungeons too!</value>
    <comment></comment>  </data>
  <data name="Pachirisu_Line_006" xml:space="preserve">
    <value>Maybe we'll even race each other sometime!</value>
    <comment></comment>  </data>
  <data name="Pachirisu_Line_007" xml:space="preserve">
    <value>Good luck on your adventures!</value>
    <comment></comment>  </data>
</root>