<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Expo_Cutscene_Line_001" xml:space="preserve">
    <value>What a fool...[pause=0] One does not simply walk through the {0}.</value>
    <comment></comment>  </data>
  <data name="Expo_Cutscene_Line_002" xml:space="preserve">
    <value>Hohoo![pause=0] Don't get ahead of yourself, young one.</value>
    <comment></comment>  </data>
  <data name="Expo_Cutscene_Line_003" xml:space="preserve">
    <value>That dungeon has long been known as the most dangerous of this entire island!</value>
    <comment></comment>  </data>
  <data name="Expo_Cutscene_Line_004" xml:space="preserve">
    <value>You are an explorer, correct?[pause=0] Tell me, what is the name of your team?</value>
    <comment></comment>  </data>
  <data name="Expo_Cutscene_Line_005" xml:space="preserve">
    <value>So, your group is known as [color=#FFA5FF]{0}[color]?</value>
    <comment></comment>  </data>
  <data name="Expo_Cutscene_Line_006" xml:space="preserve">
    <value>Hohoo... I certainly hope you know what you're getting into...</value>
    <comment></comment>  </data>
  <data name="Expo_Cutscene_Line_007" xml:space="preserve">
    <value>Many teams have attempted the {0}, yet not a single one has met with success.</value>
    <comment></comment>  </data>
  <data name="Expo_Cutscene_Line_008" xml:space="preserve">
    <value>Might I suggest an alternative?</value>
    <comment></comment>  </data>
  <data name="Expo_Cutscene_Line_009" xml:space="preserve">
    <value>Head East and you will find a camp of friendly Pok√©mon.[pause=0] You can stock up on supplies there.</value>
    <comment></comment>  </data>
  <data name="Expo_Cutscene_Line_010" xml:space="preserve">
    <value>If you are looking to explore this island, I suggest you start with the {0}.</value>
    <comment></comment>  </data>
  <data name="Expo_Cutscene_Line_011" xml:space="preserve">
    <value>And if you seek knowledge of Mystery Dungeons, come and speak to me.</value>
    <comment></comment>  </data>
  <data name="Noctowl_Action_Line_001" xml:space="preserve">
    <value>Hohoo! You should think twice about returning to the {0}.</value>
    <comment></comment>  </data>
  <data name="Noctowl_Action_Line_002" xml:space="preserve">
    <value>The dungeon will strip away your levels and moves,[pause=0] leaving you with only wits to survive.</value>
    <comment></comment>  </data>
  <data name="Noctowl_Action_Line_003" xml:space="preserve">
    <value>Even in the years past, no explorer has been able to conquer that challenge.</value>
    <comment></comment>  </data>
  <data name="Noctowl_Ask_Tutorial" xml:space="preserve">
    <value>Fancy a visit to the {0}?</value>
    <comment></comment>  </data>
  <data name="Noctowl_Tutorial_End" xml:space="preserve">
    <value>Best of luck with your journeys.</value>
    <comment></comment>  </data>
  <data name="Noctowl_Tutorial_Line_001" xml:space="preserve">
    <value>Mystery Dungeons are unpredictable, changing their layouts constantly. Not so with the {0}!</value>
    <comment></comment>  </data>
  <data name="Noctowl_Tutorial_Line_002" xml:space="preserve">
    <value>Here you will learn the basics of adventuring, and experiment without fear of failure.</value>
    <comment></comment>  </data>
  <data name="Noctowl_Tutorial_Line_003" xml:space="preserve">
    <value>Your level will be temporarily reset, and progress in the dungeon won't be recorded.</value>
    <comment></comment>  </data>
  <data name="Sign_Action_Text" xml:space="preserve">
    <value>North: Dungeon Entrance\nEast: Base Camp</value>
    <comment></comment>  </data>
</root>