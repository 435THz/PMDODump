name: deploy
on:
  push:
    tags:
      - '*'

jobs:
  build_deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: 5.0.x
      - name: Submodules
        run: git submodule update --init --recursive PMDC/
      - name: Restore
        run: dotnet restore
      - name: Build Windows App x86
        run: dotnet publish -c Release -r win-x86 PMDC/PMDC/PMDC.csproj;mv PMDC/publish/win-x86/PMDC/ PMDC/publish/win-x86/PMDO/;mv PMDC/publish/win-x86/PMDO/PMDC.exe PMDC/publish/win-x86/PMDO/PMDO.exe
      - name: Build Windows App
        run: dotnet publish -c Release -r win-x64 PMDC/PMDC/PMDC.csproj;mv PMDC/publish/win-x64/PMDC/ PMDC/publish/win-x64/PMDO/;mv PMDC/publish/win-x64/PMDO/PMDC.exe PMDC/publish/win-x64/PMDO/PMDO.exe
      - name: Build Linux App
        run: dotnet publish -c Release -r linux-x64 PMDC/PMDC/PMDC.csproj;mv PMDC/publish/linux-x64/PMDC/ PMDC/publish/linux-x64/PMDO/;mv PMDC/publish/linux-x64/PMDO/PMDC PMDC/publish/linux-x64/PMDO/PMDO
      - name: Build Mac App
        run: dotnet publish -c Release -r osx-x64 PMDC/PMDC/PMDC.csproj;mv PMDC/publish/osx-x64/PMDC/ PMDC/publish/osx-x64/PMDO/;mv PMDC/publish/osx-x64/PMDO/PMDC PMDC/publish/osx-x64/PMDO/PMDO
      - name: Build Windows Server x86
        run: dotnet publish -c Release -r win-x86 PMDC/RogueEssence/WaypointServer/WaypointServer.csproj;mv PMDC/RogueEssence/publish/win-x86/WaypointServer/ PMDC/publish/win-x86/
      - name: Build Windows Server
        run: dotnet publish -c Release -r win-x64 PMDC/RogueEssence/WaypointServer/WaypointServer.csproj;mv PMDC/RogueEssence/publish/win-x64/WaypointServer/ PMDC/publish/win-x64/
      - name: Build Linux Server
        run: dotnet publish -c Release -r linux-x64 PMDC/RogueEssence/WaypointServer/WaypointServer.csproj;mv PMDC/RogueEssence/publish/linux-x64/WaypointServer/ PMDC/publish/linux-x64/
      - name: Build Mac Server
        run: dotnet publish -c Release -r osx-x64 PMDC/RogueEssence/WaypointServer/WaypointServer.csproj;mv PMDC/RogueEssence/publish/osx-x64/WaypointServer.app/ PMDC/publish/osx-x64/
      - name: Zip Windows x86
        run: cd PMDC/publish/win-x86/;zip -r windows-x86.zip PMDO/ WaypointServer/
      - name: Zip Windows
        run: cd PMDC/publish/win-x64/;zip -r windows-x64.zip PMDO/ WaypointServer/
      - name: Zip Linux
        run: cd PMDC/publish/linux-x64/;zip -r linux-x64.zip PMDO/ WaypointServer/
      - name: Zip Mac
        run: cd PMDC/publish/osx-x64/;zip -r osx-x64.zip PMDO/ WaypointServer/
      - name: Build Windows Updater x86
        run: dotnet publish -c Release -r win-x86 Updater/Updater.csproj
      - name: Build Windows Updater
        run: dotnet publish -c Release -r win-x64 Updater/Updater.csproj
      - name: Build Linux Updater
        run: dotnet publish -c Release -r linux-x64 Updater/Updater.csproj
      - name: Build Mac Updater
        run: dotnet publish -c Release -r osx-x64 Updater/Updater.csproj
      - name: Zip Windows Updater x86
        run: cd publish/win-x86/;zip -r updater-windows-x86.zip Updater/
      - name: Zip Windows Updater
        run: cd publish/win-x64/;zip -r updater-windows-x64.zip Updater/
      - name: Zip Linux Updater
        run: cd publish/linux-x64/;zip -r updater-linux-x64.zip Updater/
      - name: Zip Mac Updater
        run: cd publish/osx-x64/;zip -r updater-osx-x64.zip Updater/
      - name: Set Version
        run: echo "::set-output name=version::$(sed -En 's,<\AssemblyVersion>(.+)</AssemblyVersion>,\1,p' DataGenerator/DataGenerator.csproj)"
        id: version
      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Upload Windows x86
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./PMDC/publish/win-x86/windows-x86.zip
          asset_name: windows-x86.zip
          asset_content_type: application/zip
      - name: Upload Windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./PMDC/publish/win-x64/windows-x64.zip
          asset_name: windows-x64.zip
          asset_content_type: application/zip
      - name: Upload Linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./PMDC/publish/linux-x64/linux-x64.zip
          asset_name: linux-x64.zip
          asset_content_type: application/zip
      - name: Upload Mac
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./PMDC/publish/osx-x64/osx-x64.zip
          asset_name: osx-x64.zip
          asset_content_type: application/zip
      - name: Upload Windows x86 Updater
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/win-x86/updater-windows-x86.zip
          asset_name: updater-windows-x86.zip
          asset_content_type: application/zip
      - name: Upload Windows Updater
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/win-x64/updater-windows-x64.zip
          asset_name: updater-windows-x64.zip
          asset_content_type: application/zip
      - name: Upload Linux Updater
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/linux-x64/updater-linux-x64.zip
          asset_name: updater-linux-x64.zip
          asset_content_type: application/zip
      - name: Upload Mac Updater
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/osx-x64/updater-osx-x64.zip
          asset_name: updater-osx-x64.zip
          asset_content_type: application/zip